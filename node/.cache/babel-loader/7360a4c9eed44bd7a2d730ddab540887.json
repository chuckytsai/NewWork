{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chucky\\\\Documents\\\\GitHub\\\\NewWorks\\\\NewWork\\\\src\\\\pages\\\\memorandum\\\\CalendarGroup.js\";\nimport React from \"react\";\nimport \"moment/locale/zh-tw\";\nimport ReactDOM from 'react-dom';\nimport { Calendar } from 'react-calendar';\nimport dayjs from 'dayjs';\nimport { onSelect } from \"./ListGroup\";\nimport { ThisMonthOnly } from \"./ScheduleFunction\";\nimport { CallLoanding, CloseLoanding } from \"../../components/Loading\"; // import { ChickCheckdate } from \"../../../components/Function/SwalWarn\";\n\nimport { DataCompent } from \"../../components/Json/Holiday.json\"; // 引入Json檔案\n\nimport { ScheduleList } from \"../../components/Json/ScheduleList.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet ThisMonth = new Date().getMonth();\nlet ThisYear = new Date().getFullYear();\nlet dateCost = 0;\n\nlet tileContent = ({\n  date,\n  view\n}) => view === 'month' && date.getMonth() === ThisMonth ? /*#__PURE__*/_jsxDEV(\"span\", {\n  value: dateCost++,\n  className: \"DateList\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 9\n}, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n  className: \"NoDateList\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 65\n}, this);\n\nfunction nextThisMon() {\n  CallLoanding();\n\n  if (ThisMonth < 11) {\n    ThisMonth = ThisMonth + 1;\n  } else {\n    ThisMonth = 0;\n  }\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(CalenderGroup, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this), document.getElementById('calendarContainer'));\n  setTimeout(() => {\n    StoreEvents();\n    ThisMonthOnly();\n  }, 250);\n}\n\nfunction prevThisMon() {\n  CallLoanding();\n\n  if (ThisMonth === 0) {\n    ThisMonth = 11;\n  } else {\n    ThisMonth = ThisMonth - 1;\n  }\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(CalenderGroup, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this), document.getElementById('calendarContainer'));\n  setTimeout(() => {\n    StoreEvents();\n    ThisMonthOnly();\n  }, 200);\n} // 變更月份改變事件\n\n\nexport function ChangeMonths() {\n  document.getElementsByClassName(\"react-calendar__navigation__next-button\")[0].addEventListener(\"click\", nextThisMon, false);\n  document.getElementsByClassName(\"react-calendar__navigation__prev-button\")[0].addEventListener(\"click\", prevThisMon, false);\n} // 月曆上的物件(事件)\n\n_c = ChangeMonths;\nexport function CalenderGroup() {\n  setTimeout(() => {\n    let DateList = document.getElementsByClassName(\"DateList\");\n\n    if (document.body.clientWidth > 820) {\n      for (let x = 0; x < DateList.length; x++) {\n        DateList[x].index = x;\n        DateList[x].addEventListener(\"mousemove\", addClass, false);\n        DateList[x].addEventListener(\"mouseout\", delClass, false);\n      }\n    }\n\n    function addClass() {\n      if (DateList[this.index].lastElementChild !== null) {\n        if (DateList[this.index].lastElementChild.className === \"BusinessMachine\") {\n          DateList[this.index].classList.add(\"DateListHover\");\n        }\n      }\n    }\n\n    function delClass() {\n      if (DateList[this.index].lastElementChild !== null) {\n        DateList[this.index].classList.remove(\"DateListHover\");\n      }\n    }\n  }, 500);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      locale: \"zh-TW\",\n      defaultView: \"month\",\n      formatDay: (locale, date) => dayjs(date).format('D'),\n      formatMonthYear: (locale, date) => dayjs(date).format('YYYY - MM'),\n      formatShortWeekday: (locale, date) => dayjs(date).format('dddd'),\n      calendarType: \"US\",\n      tileContent: tileContent,\n      onClickDay: (value, event) => onSelect(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"BusinessTimeInstruction\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"periodIndex periodMorning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), \"早上時段: 10:00 ~ 14:00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"periodIndex periodNoonday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), \"下午時段: 14:00 ~ 18:00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"periodIndex periodNight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), \"晚上時段: 18:00 ~ 22:00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n} // =====渲染假日=====\n\n_c2 = CalenderGroup;\nexport function HolidayDates(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HolidayDates\",\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 12\n  }, this);\n}\n_c3 = HolidayDates;\nexport function HolidayEvents() {\n  let DateList = document.getElementsByClassName(\"DateList\");\n\n  for (let x = 0; x < DateList.length; x++) {\n    for (let y = 0; y < DataCompent.length; y++) {\n      if (parseInt(DataCompent[y].date.split(\"-\")[1]) === ThisMonth + 1) {\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(HolidayDates, {\n          text: DataCompent[y].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }, this), DateList[parseInt(DataCompent[y].date.split(\"-\")[2]) - 1]);\n      }\n    }\n  }\n} // =====店家周期排程=====\n\n_c4 = HolidayEvents;\n\nlet StoreEvents = async () => {\n  let DateList = document.getElementsByClassName(\"DateList\");\n\n  for (let x = 0; x < DateList.length; x++) {\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" \"\n    }, void 0, false), document.getElementsByClassName(\"DateList\")[x]);\n  }\n\n  let StoreMonth = ThisMonth + 1;\n\n  if (StoreMonth < 10) {\n    StoreMonth = \"0\" + StoreMonth;\n  }\n\n  setTimeout(() => {\n    for (let x = 0; x < DateList.length; x++) {\n      for (let y = 0; y < ScheduleList.length; y++) {\n        if (ScheduleList[y][0][\"date\"].split(\"-\")[0] === String(ThisYear) && ScheduleList[y][0][\"date\"].split(\"-\")[1] === StoreMonth) {\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"BusinessMachine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this), document.getElementsByClassName(\"DateList\")[parseInt(ScheduleList[y][0].date.split(\"-\")[2]) - 1]);\n        }\n      }\n    }\n\n    let BusinessMachine = document.getElementsByClassName(\"BusinessMachine\");\n\n    for (let x = 0; x < BusinessMachine.length; x++) {\n      let BusinessMachines = ScheduleList[x].map((item, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BusinessMachines\" + \" BusinessMachines\" + item.work,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"periodIndex  time\" + item.business_time.split(\":\")[0],\n          children: \"O \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), item.name]\n      }, y, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this));\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: BusinessMachines\n      }, void 0, false), document.getElementsByClassName(\"BusinessMachine\")[x]);\n    }\n\n    HolidayEvents();\n    CloseLoanding();\n  }, 200);\n};\n\n_c5 = StoreEvents;\nexport function StoreEvent() {\n  ThisMonthOnly();\n  StoreEvents();\n}\n_c6 = StoreEvent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ChangeMonths\");\n$RefreshReg$(_c2, \"CalenderGroup\");\n$RefreshReg$(_c3, \"HolidayDates\");\n$RefreshReg$(_c4, \"HolidayEvents\");\n$RefreshReg$(_c5, \"StoreEvents\");\n$RefreshReg$(_c6, \"StoreEvent\");","map":{"version":3,"sources":["C:/Users/chucky/Documents/GitHub/NewWorks/NewWork/src/pages/memorandum/CalendarGroup.js"],"names":["React","ReactDOM","Calendar","dayjs","onSelect","ThisMonthOnly","CallLoanding","CloseLoanding","DataCompent","ScheduleList","ThisMonth","Date","getMonth","ThisYear","getFullYear","dateCost","tileContent","date","view","nextThisMon","render","document","getElementById","setTimeout","StoreEvents","prevThisMon","ChangeMonths","getElementsByClassName","addEventListener","CalenderGroup","DateList","body","clientWidth","x","length","index","addClass","delClass","lastElementChild","className","classList","add","remove","locale","format","value","event","HolidayDates","props","text","HolidayEvents","y","parseInt","split","name","StoreMonth","String","BusinessMachine","BusinessMachines","map","item","work","business_time","StoreEvent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"moment/locale/zh-tw\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Calendar } from 'react-calendar';\r\nimport dayjs from 'dayjs';\r\nimport { onSelect } from \"./ListGroup\";\r\nimport { ThisMonthOnly } from \"./ScheduleFunction\";\r\nimport { CallLoanding, CloseLoanding } from \"../../components/Loading\";\r\n// import { ChickCheckdate } from \"../../../components/Function/SwalWarn\";\r\nimport { DataCompent } from \"../../components/Json/Holiday.json\";\r\n// 引入Json檔案\r\nimport { ScheduleList } from \"../../components/Json/ScheduleList.json\";\r\n\r\nlet ThisMonth = new Date().getMonth();\r\nlet ThisYear = new Date().getFullYear();\r\nlet dateCost = 0;\r\nlet tileContent = ({ date, view }) =>\r\n    view ===\r\n        'month' && date.getMonth() === ThisMonth ?\r\n        <span value={dateCost++} className=\"DateList\"></span> : <p className=\"NoDateList\"></p>\r\n\r\nfunction nextThisMon() {\r\n    CallLoanding();\r\n    if (ThisMonth < 11) {\r\n        ThisMonth = ThisMonth + 1;\r\n    }\r\n    else {\r\n        ThisMonth = 0;\r\n    }\r\n    ReactDOM.render(<CalenderGroup />, document.getElementById('calendarContainer'));\r\n    setTimeout(() => {\r\n        StoreEvents();\r\n        ThisMonthOnly();\r\n    }, 250);\r\n}\r\nfunction prevThisMon() {\r\n    CallLoanding();\r\n    if (ThisMonth === 0) {\r\n        ThisMonth = 11;\r\n    }\r\n    else {\r\n        ThisMonth = ThisMonth - 1;\r\n    }\r\n    ReactDOM.render(<CalenderGroup />, document.getElementById('calendarContainer'));\r\n    setTimeout(() => {\r\n        StoreEvents();\r\n        ThisMonthOnly();\r\n    }, 200);\r\n}\r\n// 變更月份改變事件\r\nexport function ChangeMonths() {\r\n    document.getElementsByClassName(\"react-calendar__navigation__next-button\")[0].addEventListener(\"click\", nextThisMon, false);\r\n    document.getElementsByClassName(\"react-calendar__navigation__prev-button\")[0].addEventListener(\"click\", prevThisMon, false);\r\n}\r\n// 月曆上的物件(事件)\r\nexport function CalenderGroup() {\r\n    setTimeout(() => {\r\n        let DateList = document.getElementsByClassName(\"DateList\");\r\n        if (document.body.clientWidth > 820) {\r\n            for (let x = 0; x < DateList.length; x++) {\r\n                \r\n                DateList[x].index = x;\r\n                DateList[x].addEventListener(\"mousemove\", addClass, false);\r\n                DateList[x].addEventListener(\"mouseout\", delClass, false);\r\n            }\r\n        }\r\n        function addClass() {\r\n            if (DateList[this.index].lastElementChild !== null) {\r\n                if (DateList[this.index].lastElementChild.className === \"BusinessMachine\") {\r\n                    DateList[this.index].classList.add(\"DateListHover\");\r\n                }\r\n            }\r\n        }\r\n        function delClass() {\r\n            if (DateList[this.index].lastElementChild !== null) {\r\n                DateList[this.index].classList.remove(\"DateListHover\");\r\n            }\r\n        }\r\n    }, 500);\r\n    return <>\r\n        <Calendar\r\n            locale={(\"zh-TW\")}\r\n            defaultView={(\"month\")}\r\n            formatDay={(locale, date) => dayjs(date).format('D')}\r\n            formatMonthYear={(locale, date) => dayjs(date).format('YYYY - MM')}\r\n            formatShortWeekday={(locale, date) => dayjs(date).format('dddd')}\r\n            calendarType={(\"US\")}\r\n            tileContent={tileContent}\r\n            onClickDay={(value, event) => onSelect(value)}\r\n        /><footer className=\"BusinessTimeInstruction\">\r\n            <h6><div className=\"periodIndex periodMorning\"></div>{\"早上時段: 10:00 ~ 14:00\"}</h6>\r\n            <h6><div className=\"periodIndex periodNoonday\"></div>{\"下午時段: 14:00 ~ 18:00\"}</h6>\r\n            <h6><div className=\"periodIndex periodNight\"></div>{\"晚上時段: 18:00 ~ 22:00\"}</h6>\r\n        </footer></>\r\n}\r\n// =====渲染假日=====\r\nexport function HolidayDates(props) {\r\n    return <div className=\"HolidayDates\">{props.text}</div>\r\n}\r\nexport function HolidayEvents() {\r\n    let DateList = document.getElementsByClassName(\"DateList\");\r\n    for (let x = 0; x < DateList.length; x++) {\r\n        for (let y = 0; y < DataCompent.length; y++) {\r\n            if (parseInt(DataCompent[y].date.split(\"-\")[1]) === (ThisMonth + 1)) {\r\n                ReactDOM.render(<HolidayDates text={DataCompent[y].name} />,\r\n                DateList[parseInt(DataCompent[y].date.split(\"-\")[2]) - 1])\r\n            }\r\n        }\r\n    }\r\n}\r\n// =====店家周期排程=====\r\nlet StoreEvents = async () => {\r\n    let DateList = document.getElementsByClassName(\"DateList\");\r\n    for (let x = 0; x < DateList.length; x++) {\r\n        ReactDOM.render(<>{\" \"}</>, document.getElementsByClassName(\"DateList\")[x])\r\n    }\r\n    let StoreMonth = ThisMonth + 1;\r\n    if (StoreMonth < 10) {\r\n        StoreMonth = \"0\" + StoreMonth\r\n    }\r\n    setTimeout(() => {\r\n        for (let x = 0; x < DateList.length; x++) {\r\n            for (let y = 0; y < ScheduleList.length; y++) {\r\n                if (ScheduleList[y][0][\"date\"].split(\"-\")[0] === String(ThisYear) && ScheduleList[y][0][\"date\"].split(\"-\")[1] === StoreMonth) {\r\n                    ReactDOM.render(<div className=\"BusinessMachine\"></div>,\r\n                        document.getElementsByClassName(\"DateList\")[parseInt(ScheduleList[y][0].date.split(\"-\")[2]) - 1])\r\n                }\r\n            }\r\n        }\r\n        let BusinessMachine = document.getElementsByClassName(\"BusinessMachine\");\r\n        for (let x = 0; x < BusinessMachine.length; x++) {\r\n            let BusinessMachines = ScheduleList[x].map((item, y) => (\r\n                <div className={\"BusinessMachines\" + \" BusinessMachines\" + item.work} key={y}>\r\n                    <div className={\"periodIndex  time\" + item.business_time.split(\":\")[0]}>O </div>\r\n                    {item.name}\r\n                </div>\r\n            ))\r\n            ReactDOM.render(<>{BusinessMachines}</>, document.getElementsByClassName(\"BusinessMachine\")[x])\r\n        }\r\n        HolidayEvents();\r\n        CloseLoanding();\r\n    }, 200);\r\n\r\n};\r\nexport function StoreEvent() {\r\n    ThisMonthOnly();\r\n    StoreEvents();\r\n}"]},"metadata":{},"sourceType":"module"}