{"ast":null,"code":"var _jsxFileName = \"D:\\\\cms-v2\\\\src\\\\components\\\\ReactElement\\\\OriginalLabel\\\\LabelCheckerboard.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom'; // 引入按鈕\n\nimport { ClickMe, TripletsBtns, ChildTripletsBtns } from \"../../../components/ReactElement/ColorBtn\";\nimport { SwitchBtn } from \"../../../components/ReactElement/SwitchBtn\"; // 引入函式\n\nimport { UnfoldTd } from \"../../../components/ReactElement/OriginalLabel/LabelFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet ApiUrlChild = \"/item/category/show/2788\";\nlet LabelTr = []; //暫時的假資料\n\nlet LabelDatasTd = [];\nlet TitleName; // ==============一般表格依照資料多寡製造出表格欄位================\n\nexport function LabelCheckerboard() {\n  let LabelDatasTr = [];\n  let ChildTd = [];\n  let LabelDatasTd = []; // 表格標題(包含點擊+圖片)\n\n  for (let x = 0; x < localStorage.LabelTitleCost; x++) {\n    LabelDatasTd.push( /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"ChildTd ChildTd\" + x,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clickMeSpan\" + x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clickMeText\" + x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, x, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this));\n  } // 手機螢幕所需要的表格\n\n\n  for (let y = 3; y < localStorage.LabelTitleCost; y++) {\n    ChildTd.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cellphoneLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ChildGroupTitle ChildGroupTitle\" + y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ChildGroupContent ChildGroupContent\" + y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, y, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this));\n  } // 表格欄位\n\n\n  for (let z = 0; z < localStorage.LabelCotentCost; z++) {\n    LabelDatasTr.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"keyMan\",\n      children: LabelDatasTd\n    }, z, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this));\n    LabelDatasTr.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"ChildGroup\",\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: ChildTd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, z + \"tr\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: LabelDatasTr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n_c = LabelCheckerboard;\nexport function LabelApiCheckerboard() {\n  fetch(\"https://api-v2-t.hillever.com/cms2\" + ApiUrlChild, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${localStorage.UserTK}`\n    },\n    body: JSON.stringify()\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    if (localStorage.OptionIndex === \"菜單總覽\") {\n      TitleName = localStorage.LabelTitle.split(\",\");\n      LabelTr = [\"data\"];\n      LabelDatasTd = [{\n        \"name\": TitleName[0],\n        \"data\": res.data.dataInfo.id\n      }, {\n        \"name\": TitleName[1],\n        \"data\": res.data.dataInfo.name\n      }, {\n        \"name\": TitleName[2],\n        \"data\": res.data.dataInfo.parents\n      }, {\n        \"name\": TitleName[3],\n        \"data\": res.data.dataInfo.parents_name\n      }, {\n        \"name\": TitleName[4],\n        \"data\": res.data.dataInfo.sorts\n      }, {\n        \"name\": TitleName[5],\n        \"data\": /*#__PURE__*/_jsxDEV(SwitchBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this)\n      }, {\n        \"name\": TitleName[6],\n        \"data\": /*#__PURE__*/_jsxDEV(TripletsBtns, {\n          onClick: () => {// console.log(\"haha\")\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this)\n      }];\n    }\n\n    let ApiLabel = document.getElementsByClassName(\"ApiLabel\");\n    let LabelDatasTds = LabelDatasTd.map((item, x) => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"ChildTd ChildTd\" + x,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clickMeSpan\" + x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clickMeText\" + x,\n        children: item[\"data\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, x, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this));\n    let LabelDatasTdChilds = LabelDatasTd.map((LabelDatasTd, y) => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"ChildTd ChildTd\" + y,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cellphoneLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ChildGroupTitle ChildGroupTitle\" + y,\n          children: LabelDatasTd[\"name\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ChildGroupContent ChildGroupContent\" + y,\n          children: LabelDatasTd[\"data\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, y, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, y, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this));\n    let LabelTrs = LabelTr.map((LabelTr, z) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: LabelDatasTds\n      }, z, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"ChildGroup\",\n        children: LabelDatasTdChilds\n      }, z + \"tr\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true));\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: LabelTrs\n    }, void 0, false), ApiLabel[0]);\n  });\n}\n_c2 = LabelApiCheckerboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LabelCheckerboard\");\n$RefreshReg$(_c2, \"LabelApiCheckerboard\");","map":{"version":3,"sources":["D:/cms-v2/src/components/ReactElement/OriginalLabel/LabelCheckerboard.js"],"names":["React","ReactDOM","ClickMe","TripletsBtns","ChildTripletsBtns","SwitchBtn","UnfoldTd","ApiUrlChild","LabelTr","LabelDatasTd","TitleName","LabelCheckerboard","LabelDatasTr","ChildTd","x","localStorage","LabelTitleCost","push","y","z","LabelCotentCost","LabelApiCheckerboard","fetch","method","headers","Accept","UserTK","body","JSON","stringify","then","response","json","res","OptionIndex","LabelTitle","split","data","dataInfo","id","name","parents","parents_name","sorts","ApiLabel","document","getElementsByClassName","LabelDatasTds","map","item","LabelDatasTdChilds","LabelTrs","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n// 引入按鈕\r\nimport { ClickMe, TripletsBtns, ChildTripletsBtns } from \"../../../components/ReactElement/ColorBtn\";\r\nimport { SwitchBtn } from \"../../../components/ReactElement/SwitchBtn\"\r\n// 引入函式\r\nimport { UnfoldTd } from \"../../../components/ReactElement/OriginalLabel/LabelFunction\"\r\n\r\nlet ApiUrlChild = \"/item/category/show/2788\"\r\nlet LabelTr = []; //暫時的假資料\r\nlet LabelDatasTd = [];\r\nlet TitleName ;\r\n\r\n// ==============一般表格依照資料多寡製造出表格欄位================\r\nexport function LabelCheckerboard() {\r\n    let LabelDatasTr = [];\r\n    let ChildTd = [];\r\n    let LabelDatasTd = [];\r\n    // 表格標題(包含點擊+圖片)\r\n    for (let x = 0; x < localStorage.LabelTitleCost; x++) {\r\n        LabelDatasTd.push(<td key={x} className={\"ChildTd ChildTd\" + x}>\r\n            <span className={\"clickMeSpan\" + x}></span>\r\n            <span className={\"clickMeText\" + x}></span>\r\n        </td>)\r\n    }\r\n    // 手機螢幕所需要的表格\r\n    for (let y = 3; y < localStorage.LabelTitleCost; y++) {\r\n        ChildTd.push(<div className=\"cellphoneLabel\" key={y}>\r\n            <span className={\"ChildGroupTitle ChildGroupTitle\" + y}></span>\r\n            <span className={\"ChildGroupContent ChildGroupContent\" + y}></span>\r\n        </div>)\r\n    }\r\n    // 表格欄位\r\n    for (let z = 0; z < localStorage.LabelCotentCost; z++) {\r\n        LabelDatasTr.push(<tr key={z} className=\"keyMan\">{LabelDatasTd}</tr>)\r\n        LabelDatasTr.push(<tr key={z + \"tr\"} className=\"ChildGroup\">\r\n            <td>{ChildTd}</td>\r\n        </tr>\r\n        )\r\n    }\r\n    return <tbody>\r\n        {LabelDatasTr}\r\n    </tbody>\r\n}\r\n\r\n\r\nexport function LabelApiCheckerboard() {\r\n    fetch(\"https://api-v2-t.hillever.com/cms2\" + ApiUrlChild, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Bearer ${localStorage.UserTK}`\r\n        },\r\n        body: JSON.stringify(),\r\n    })\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((res) => {\r\n            if (localStorage.OptionIndex === \"菜單總覽\") {\r\n                TitleName = localStorage.LabelTitle.split(\",\")\r\n                LabelTr = [\"data\"];\r\n                LabelDatasTd = [\r\n                    {\r\n                        \"name\": TitleName[0],\r\n                        \"data\": res.data.dataInfo.id\r\n                    },\r\n                    {\r\n                        \"name\": TitleName[1],\r\n                        \"data\": res.data.dataInfo.name\r\n                    },\r\n                    {\r\n                        \"name\": TitleName[2],\r\n                        \"data\": res.data.dataInfo.parents\r\n                    },\r\n                    {\r\n                        \"name\": TitleName[3],\r\n                        \"data\": res.data.dataInfo.parents_name\r\n                    },\r\n                    {\r\n                        \"name\": TitleName[4],\r\n                        \"data\": res.data.dataInfo.sorts\r\n                    },\r\n                    {\r\n                        \"name\": TitleName[5],\r\n                        \"data\": <SwitchBtn />\r\n                    },\r\n                    {\r\n                        \"name\": TitleName[6],\r\n                        \"data\": <TripletsBtns\r\n                            onClick={() => {\r\n                                // console.log(\"haha\")\r\n                            }}\r\n                        />\r\n                    }\r\n\r\n                ];\r\n            }\r\n            let ApiLabel = document.getElementsByClassName(\"ApiLabel\");\r\n            let LabelDatasTds = LabelDatasTd.map((item, x) =>\r\n                <td key={x} className={\"ChildTd ChildTd\" + x}>\r\n                    <span className={\"clickMeSpan\" + x}></span>\r\n                    <span className={\"clickMeText\" + x}>{item[\"data\"]}</span>\r\n                </td>\r\n            )\r\n            let LabelDatasTdChilds = LabelDatasTd.map((LabelDatasTd, y) =>\r\n                <td key={y} className={\"ChildTd ChildTd\" + y}>\r\n                    <div className=\"cellphoneLabel\" key={y}>\r\n                        <span className={\"ChildGroupTitle ChildGroupTitle\" + y}>\r\n                            {LabelDatasTd[\"name\"]}\r\n                        </span>\r\n                        <span className={\"ChildGroupContent ChildGroupContent\" + y}>\r\n                            {LabelDatasTd[\"data\"]}\r\n                        </span>\r\n                    </div>\r\n                </td>\r\n            )\r\n            let LabelTrs = LabelTr.map((LabelTr, z) =>\r\n                <>\r\n                    <tr key={z}>\r\n                        {LabelDatasTds}\r\n                    </tr>\r\n                    <tr key={z + \"tr\"} className=\"ChildGroup\">\r\n                        {LabelDatasTdChilds}\r\n                    </tr>\r\n                </>\r\n            )\r\n            ReactDOM.render(<>{LabelTrs}</>, ApiLabel[0])\r\n        })\r\n\r\n}"]},"metadata":{},"sourceType":"module"}